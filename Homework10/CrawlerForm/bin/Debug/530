<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>三合视角 - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=-oFz8B4m7JhHaZzdTkzPza2oLZNDRR8obnCz6w7OHbU" />
    <link id="MainCss" rel="stylesheet" href="/skins/simplememory/bundle-simplememory.min.css?v=OL4qeo1LNGlN1rKIhv5UctANvt0M6Nx6kLzr_ffx3Xk" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/SimpleMemory/bundle-SimpleMemory-mobile.min.css" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/hezp/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/hezp/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/hezp/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=z6JkvKQ7L_bGD-nwJExYzsoFf5qnluqZJru6RsfoZuM"></script>
    <script>
        var currentBlogId = 532552;
        var currentBlogApp = 'hezp';
        var cb_enable_mathjax = false;
        var isLogined = false;
        var skinName = 'SimpleMemory';
    </script>
    
    
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/hezp/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/hezp/">三合视角</a>
</h1>
<h2>
大道五十,天衍四九,人遁其一，一生二，二生三，三合视角
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/hezp/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/%E4%B8%89%E5%90%88%E8%A7%86%E8%A7%92">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/hezp/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
6&nbsp; </span>
<span id="stats_article_count">文章 - 
0&nbsp; </span>
<span id="stats-comment_count">评论 - 
67</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<!--done-->




		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/hezp/archive/2020/04/24.html">2020年4月24日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/hezp/p/12747340.html">
    net core天马行空系列：降低net core门槛，数据库操作和http访问仅需写接口，实现类由框架动态生成
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：引文 hi，大家好，我是三合。不知各位有没有想过，如果能把数据库操作和http访问都统一封装成接口（interface）的形式， 然后接口对应的实现类由框架去自动生成，那么必然能大大降低工作量，因为不需要去写很多重复的代码了，还有一个好处是，都是提供接口，我们把原来数据库操作的部分，改成http访问            <a href="https://www.cnblogs.com/hezp/p/12747340.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-04-24 09:02 三合视角 阅读 (1006) 评论 (18)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12747340" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/hezp/archive/2020/03/18.html">2020年3月18日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/hezp/p/12494799.html">
    net core天马行空系列：移植Feign，结合Polly，实现回退，熔断，重试，超时，做最好用的声明式http服务调用端
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：net core 版本的Feign，结合Polly，实现回退，熔断，重试，超时，做最好用的声明式http服务调用端            <a href="https://www.cnblogs.com/hezp/p/12494799.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-03-18 13:57 三合视角 阅读 (583) 评论 (5)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12494799" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/hezp/archive/2020/01/01.html">2020年1月1日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/hezp/p/12128858.html">
    net core天马行空系列：SummerBoot，将SpringBoot的先进理念与C#的简洁优雅合二为一
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：系列目录 1.net core天马行空系列：原生DI+AOP实现spring boot注解式编程 2.net core天马行空系列： 泛型仓储和声明式事物实现最优雅的crud操作 3.net core天马行空系列： 一个接口多个实现类，利用mixin技术通过自定义服务名，实现精准属性注入 4.net            <a href="https://www.cnblogs.com/hezp/p/12128858.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-01-01 19:48 三合视角 阅读 (1344) 评论 (13)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12128858" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/hezp/archive/2019/09/10.html">2019年9月10日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/hezp/p/11495147.html">
    net core天马行空系列： 一个接口多个实现类，利用mixin技术通过自定义服务名，实现精准属性注入
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：系列目录 1.net core天马行空系列：原生DI+AOP实现spring boot注解式编程 2.net core天马行空系列： 泛型仓储和声明式事物实现最优雅的crud操作 哈哈哈哈，大家好，我就是高产似母猪的三合。日常开发中，我们常会遇到这样的场景，一个接口，有多个实现类，在某个业务中，我们            <a href="https://www.cnblogs.com/hezp/p/11495147.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-09-10 10:15 三合视角 阅读 (1949) 评论 (9)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11495147" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/hezp/archive/2019/09/04.html">2019年9月4日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/hezp/p/11434046.html">
    net core天马行空系列： 泛型仓储和声明式事物实现最优雅的crud操作
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：系列目录 1.net core天马行空系列：原生DI+AOP实现spring boot注解式编程 哈哈哈哈，大家好，我就是那个高产似母猪的三合，长久以来，我一直在思考，如何才能实现高效而简洁的仓储模式（不是DDD里的仓储，更准确的说就是数据库表的mapper），实现spring boot里那样利用注            <a href="https://www.cnblogs.com/hezp/p/11434046.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-09-04 10:49 三合视角 阅读 (2419) 评论 (14)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11434046" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/hezp/archive/2019/08/28.html">2019年8月28日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/hezp/p/11346120.html">
    net core天马行空系列：原生DI+AOP实现spring boot注解式编程
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：写过spring boot之后，那种无处不在的注解让我非常喜欢，比如属性注入@autowire，配置值注入@value，声明式事物@Transactional等，都非常简洁优雅，那么我就在想，这些在net core里能实现么？经过一番摸索，终于实现并整理成此文。 IOC方面，个人非常喜欢net co            <a href="https://www.cnblogs.com/hezp/p/11346120.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-08-28 08:39 三合视角 阅读 (1519) 评论 (26)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11346120" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    

    </div>    
</div>








	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 三合视角
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>