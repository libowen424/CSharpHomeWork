<!DOCTYPE html>
<html lang="zh-cn">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <meta name="referrer" content="origin" />
    
    <meta http-equiv="Cache-Control" content="no-transform" />
    <meta http-equiv="Cache-Control" content="no-siteapp" />
    <meta http-equiv="X-UA-Compatible" content="IE=edge" />
    <title>baidixing - 博客园</title>
    
    <link rel="stylesheet" href="/css/blog-common.min.css?v=-oFz8B4m7JhHaZzdTkzPza2oLZNDRR8obnCz6w7OHbU" />
    <link id="MainCss" rel="stylesheet" href="/skins/codinglife/bundle-codinglife.min.css?v=hlpQ1CJDwwJXDxv2HNauUmW3NjyWzoMaw1uER19SLT0" />
    
    <link id="mobile-style" media="only screen and (max-width: 767px)" type="text/css" rel="stylesheet" href="/skins/codinglife/bundle-codinglife-mobile.min.css?v=XjHfryC9ctsatIZz1dHn7TsRIqmwz9c3aj_6SCfHSDM" />
    
    <link type="application/rss+xml" rel="alternate" href="https://www.cnblogs.com/jiagoushi/rss" />
    <link type="application/rsd+xml" rel="EditURI" href="https://www.cnblogs.com/jiagoushi/rsd.xml" />
    <link type="application/wlwmanifest+xml" rel="wlwmanifest" href="https://www.cnblogs.com/jiagoushi/wlwmanifest.xml" />
    <script src="https://common.cnblogs.com/scripts/jquery-2.2.0.min.js"></script>
    <script src="/js/blog-common.min.js?v=z6JkvKQ7L_bGD-nwJExYzsoFf5qnluqZJru6RsfoZuM"></script>
    <script>
        var currentBlogId = 94595;
        var currentBlogApp = 'jiagoushi';
        var cb_enable_mathjax = true;
        var isLogined = false;
        var skinName = 'CodingLife';
    </script>
    <script type="text/x-mathjax-config">
        MathJax.Hub.Config({
        tex2jax: { inlineMath: [['$','$'], ['\\(','\\)']], processClass: 'math', processEscapes: true },
        TeX: {
        equationNumbers: { autoNumber: ['AMS'], useLabelIds: true },
        extensions: ['extpfeil.js', 'mediawiki-texvc.js'],
        Macros: {bm: "\\boldsymbol"}
        },
        'HTML-CSS': { linebreaks: { automatic: true } },
        SVG: { linebreaks: { automatic: true } }
        });
    </script>
    <script src="https://mathjax.cnblogs.com/2_7_5/MathJax.js?config=TeX-AMS-MML_HTMLorMML"></script>
    
</head>
<body>
    <a name="top"></a>
    
    
<!--done-->
<div id="home">
<div id="header">
	<div id="blogTitle">
        <a id="lnkBlogLogo" href="https://www.cnblogs.com/jiagoushi/"><img id="blogLogo" src="/skins/custom/images/logo.gif" alt="返回主页" /></a>		
		
<!--done-->
<h1><a id="Header1_HeaderTitle" class="headermaintitle HeaderMainTitle" href="https://www.cnblogs.com/jiagoushi/">踏踏实实 务实努力</a>
</h1>
<h2>
踏踏实实 务实努力
</h2>




		
	</div><!--end: blogTitle 博客的标题和副标题 -->
	<div id="navigator">
		
<ul id="navList">
<li><a id="blog_nav_sitehome" class="menu" href="https://www.cnblogs.com/">
博客园</a>
</li>
<li>
<a id="blog_nav_myhome" class="menu" href="https://www.cnblogs.com/jiagoushi/">
首页</a>
</li>
<li>

<a id="blog_nav_newpost" class="menu" href="https://i.cnblogs.com/EditPosts.aspx?opt=1">
新随笔</a>
</li>
<li>
<a id="blog_nav_contact" class="menu" href="https://msg.cnblogs.com/send/baidixing">
联系</a></li>
<li>
<a id="blog_nav_rss" class="menu" href="https://www.cnblogs.com/jiagoushi/rss/">
订阅</a>
<!--<partial name="./Shared/_XmlLink.cshtml" model="Model" /></li>--></li>
<li>
<a id="blog_nav_admin" class="menu" href="https://i.cnblogs.com/">
管理</a>
</li>
</ul>


		<div class="blogStats">
			
			<span id="stats_post_count">随笔 - 
98&nbsp; </span>
<span id="stats_article_count">文章 - 
1&nbsp; </span>
<span id="stats-comment_count">评论 - 
750</span>

			
		</div><!--end: blogStats -->
	</div><!--end: navigator 博客导航栏 -->
</div><!--end: header 头部 -->

<div id="main">
	<div id="mainContent">
	<div class="forFlow">
		
<!--done-->




		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/jiagoushi/archive/2020/04/25.html">2020年4月25日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/jiagoushi/p/12774852.html">
    npm 包命令:不是内部或外部命令 问题分析
</a>

        </div>
        <div class="postCon">

    <div class="cnblogs-post-body" id="postlist_postbody_12774852">
        正文内容加载中...
    </div>
    <script type="text/javascript">getBlogPostBody(12774852);</script>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2020-04-25 19:39 baidixing 阅读 (7) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=12774852" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/jiagoushi/archive/2019/10/31.html">2019年10月31日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/jiagoushi/p/11770397.html">
    angular 子路由跳转出现Navigation triggered outside Angular zone, did you forget to call ‘ngZone.run() 的问题修复
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：angular 路由功能非常强大，同时angular的路由也非常脆弱，非常容易出现错误。 那么在我们遇到异常时，首先要做的是什么？ 第一步：检查代码，对比官方文档，发现代码中不一致的地方进行改正。 第二步：调试代码，观察调用过程中参数传递是否正常。 第三步：百度一下。 对于我这个观点，可能会有人不服            <a href="https://www.cnblogs.com/jiagoushi/p/11770397.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-10-31 11:55 baidixing 阅读 (288) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11770397" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/jiagoushi/archive/2019/09/25.html">2019年9月25日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/jiagoushi/p/11586026.html">
    Nodejs安装
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：Nodejs支持跨平台运行，基本可以运行于所有的操作系统，对应不同的操作系统，安装方式也不同。 Nodejs的官方网站：https://nodejs.org 对应的中文网站：http://nodejs.cn/ 倾向于英文网站，中文网站毕竟会有很大的延迟。 Windows系统的安装：不再赘述。下载对应            <a href="https://www.cnblogs.com/jiagoushi/p/11586026.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2019-09-25 17:27 baidixing 阅读 (121) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=11586026" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/jiagoushi/archive/2018/12/28.html">2018年12月28日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/jiagoushi/p/10189436.html">
    RabbitMQ 高可用之镜像队列
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：如果RabbitMQ集群只有一个broker节点，那么该节点的失效将导致整个服务临时性的不可用，并且可能会导致message的丢失（尤其是在非持久化message存储于非持久化queue中的时候）。可以将所有message都设置为持久化，并且使用持久化的queue，但是这样仍然无法避免由于缓存导致的            <a href="https://www.cnblogs.com/jiagoushi/p/10189436.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2018-12-28 11:19 baidixing 阅读 (931) 评论 (1)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10189436" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/jiagoushi/archive/2018/12/27.html">2018年12月27日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/jiagoushi/p/10186857.html">
    HAProxy 参数配置
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：RabbitMQ集群部署完成，通过HAProxy反向代理来提供统一的对RabbitMQ的访问入口。 1.Haproxy提供高可用性、负载均衡，以及基于TCP和HTTP的应用程序代理。（负载均衡策略有很多：轮询、加权轮询、源地址哈希、最小连接数等等） 2.为什么使用集群？面对大量业务访问、高并发请求可            <a href="https://www.cnblogs.com/jiagoushi/p/10186857.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2018-12-27 19:26 baidixing 阅读 (305) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10186857" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/jiagoushi/archive/2018/12/25.html">2018年12月25日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/jiagoushi/p/10174296.html">
    RabbitMQ 3.6.1 升级至 3.7.9 版本(Windows 升级至Centos)
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：随着公司业务量的增加，原本部署在Windows服务器的RabbitMQ集群(3.6.1)总是出现莫名其妙的问题,经查询官方Issue，确认是RabbitMQ 3.6.1 版本的bug。查看从3.6.1 版本至 3.7.9 版本的变更日志，可以发现RabbitMQ官方修复了不少bug，本着版本越新 b            <a href="https://www.cnblogs.com/jiagoushi/p/10174296.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2018-12-25 17:46 baidixing 阅读 (478) 评论 (1)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10174296" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/jiagoushi/archive/2018/12/24.html">2018年12月24日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/jiagoushi/p/10168962.html">
    centos安装RabbitMQ 3.7.9 (使用RPM)
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：上篇我们提到不使用RPM安装RabbitMQ 3.7.8，其实我个人更倾向不使用RPM安装RabbitMQ，因为可以控制安装位置及设置参数。 存在即合理，使用RPM安装RabbitMQ，可以减少配置参数的烦恼，使用RPM之前建议先通过不使用RPM的方式安装，以便了解各种参数及其含义。 安装Rabbi            <a href="https://www.cnblogs.com/jiagoushi/p/10168962.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2018-12-24 15:45 baidixing 阅读 (378) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10168962" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/jiagoushi/archive/2018/12/03.html">2018年12月3日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/jiagoushi/p/10061787.html">
    Java字符串操作及与C#字符串操作的不同
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：每种语言都会有字符串的操作，因为字符串是我们平常开发使用频率最高的一种类型。今天我们来聊一下Java的字符串操作及在某些具体方法中与C#的不同，对于需要熟悉多种语言的人来说，作为一种参考。进行诫勉 首先，什么是字符串？ 字符串是字符的序列，是作为一种对象而存在。说的直白点，字符串就是一些字符的组合，            <a href="https://www.cnblogs.com/jiagoushi/p/10061787.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2018-12-03 23:39 baidixing 阅读 (717) 评论 (1)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10061787" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/jiagoushi/archive/2018/12/02.html">2018年12月2日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/jiagoushi/p/10189646.html">
    RabbitMQ  惰性队列Lazy Queue
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：RabbitMQ 队列分为几种类型，按照不同维度来分，可以分为排他性队列、普通队列、延迟队列、惰性队列、发布订阅队列等。 今天我们讨论的主角是惰性队列 Lazy Queue。众所周知，队列可以存储消息并实现消息收发，这应该是消息队列中最重要的功能之一。 我们使用消息队列有几个优势，解耦、高效、发完不            <a href="https://www.cnblogs.com/jiagoushi/p/10189646.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2018-12-02 11:44 baidixing 阅读 (652) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10189646" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>


		


<div class="day">
    <div class="dayTitle">
        <a href="https://www.cnblogs.com/jiagoushi/archive/2018/11/15.html">2018年11月15日</a>
    </div>

        <div class="postTitle">
            

<a class="postTitle2" href="https://www.cnblogs.com/jiagoushi/p/10190470.html">
    RabbitMQ 发布订阅
</a>

        </div>
        <div class="postCon">

    <div class="c_b_p_desc">
摘要：互联网公司对消息队列是深度使用者，因此需要我们了解消息队列的方方面面，良好的设计及深入的理解，更有利于我们对消息队列的规划。 当前我们使用消息队列中发现一些问题： 1、实际上是异步无返回远程调用，由发布者定义队列，消费者订阅已定义的队列。 2、并没有体现解耦设计，而且开发人员间依然要像单体项目开发那            <a href="https://www.cnblogs.com/jiagoushi/p/10190470.html" class="c_b_p_desc_readmore">阅读全文</a>
    </div>
</div>
        <div class="clear"></div>
        <div class="postDesc">

posted @ 2018-11-15 14:42 baidixing 阅读 (234) 评论 (0)
<a href="https://i.cnblogs.com/EditPosts.aspx?postid=10190470" rel="nofollow">
    编辑
</a>
</div>
        <div class="clear"></div>
</div>



<div class="topicListFooter">
    <div id="nav_next_page">
        
    <a href="https://www.cnblogs.com/jiagoushi/default.html?page=2">
        下一页
    </a>

    </div>    
</div>








	</div><!--end: forFlow -->
	</div><!--end: mainContent 主体内容容器-->

	<div id="sideBar">
		<div id="sideBarMain">
			
<div id="sidebar_news" class="newsItem">
            <script>loadBlogNews();</script>
</div>

			<div id="blog-calendar" style="display:none"></div><script>loadBlogDefaultCalendar();</script>
			
			<div id="leftcontentcontainer">
				<div id="blog-sidecolumn"></div>
                    <script>loadBlogSideColumn();</script>
			</div>
			
		</div><!--end: sideBarMain -->
	</div><!--end: sideBar 侧边栏容器 -->
	<div class="clear"></div>
	</div><!--end: main -->
	<div class="clear"></div>
	<div id="footer">
		<!--done-->
Copyright &copy; 2020 baidixing
<br /><span id="poweredby">Powered by .NET Core on Kubernetes</span>



	</div><!--end: footer -->
</div><!--end: home 自定义的最大容器 -->


    
</body>
</html>